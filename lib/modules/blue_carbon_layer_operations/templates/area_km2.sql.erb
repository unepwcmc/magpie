SELECT a.habitat, a.area/10000 as area_km2
  FROM (SELECT SUM (area) as area, habitat FROM
    (SELECT ST_AREA(ST_Transform(ST_SetSRID(ST_INTERSECTION(b.the_geom, a.the_geom), 4326), 27040)) as area, habitat
    FROM (
      SELECT the_geom, habitat FROM blueforest_mangrove_<%= Rails.env %>_<%= country_name %> WHERE action <> 'delete' AND toggle = true
      UNION ALL
      SELECT the_geom, habitat FROM blueforest_seagrass_<%= Rails.env %>_<%= country_name %> WHERE action <> 'delete' AND toggle = true
      UNION ALL
      SELECT the_geom, habitat FROM blueforest_saltmarsh_<%= Rails.env %>_<%= country_name %> WHERE action <> 'delete' AND toggle = true
      UNION ALL
      SELECT the_geom, habitat FROM blueforest_algal_mat_<%= Rails.env %>_<%= country_name %> WHERE action <> 'delete' AND toggle = true
      UNION ALL
      SELECT the_geom, habitat FROM blueforest_other_<%= Rails.env %>_<%= country_name %> WHERE action <> 'delete' AND toggle = true
    ) a
    INNER JOIN
      (SELECT
        ST_SetSRID(
          <%= the_geom %>
        , 4326)
        as the_geom
      ) b
      ON ST_Intersects(a.the_geom, b.the_geom)) a
      GROUP BY habitat) a INNER JOIN (
      SELECT the_geom, habitat FROM blueforest_mangrove_<%= Rails.env %>_<%= country_name %> WHERE action <> 'delete' AND toggle = true
      UNION ALL
      SELECT the_geom, habitat FROM blueforest_seagrass_<%= Rails.env %>_<%= country_name %> WHERE action <> 'delete' AND toggle = true
      UNION ALL
      SELECT the_geom, habitat FROM blueforest_saltmarsh_<%= Rails.env %>_<%= country_name %> WHERE action <> 'delete' AND toggle = true
      UNION ALL
      SELECT the_geom, habitat FROM blueforest_algal_mat_<%= Rails.env %>_<%= country_name %> WHERE action <> 'delete' AND toggle = true
      UNION ALL
      SELECT the_geom, habitat FROM blueforest_other_<%= Rails.env %>_<%= country_name %> WHERE action <> 'delete' AND toggle = true
      ) b ON a.habitat = b. habitat group BY a.habitat, a.area;

